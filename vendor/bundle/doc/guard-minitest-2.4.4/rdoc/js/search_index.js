var search_data = {"index":{"searchIndex":["guard","minitest","inspector","notifier","reporter","runner","utils","minitestversion","minitest","minitest","minitest","minitest","unit","_commander()","_join_for_glob()","_run()","_run_anything()","_run_possibly_bundled_command()","_test_file?()","_test_files_for_paths()","all_after_pass?()","all_env()","all_paths?()","all_test_files()","autorun?()","base_env()","bundler?()","clean()","clean_all()","clear_memoized_test_files()","cli_options()","drb?()","drb_command()","generate_env()","generate_includes()","guard_image()","guard_message()","include_folders()","minitest_command()","minitest_version()","minitest_version_gte_5?()","minitest_version_gte_5_0_4?()","new()","new()","new()","notify()","parse_deprecated_options()","relative_paths()","reload()","report()","ruby_command()","rubygems?()","run()","run_all()","run_all()","run_on_additions()","run_on_additions()","run_on_modifications()","run_on_modifications()","run_on_removals()","run_on_removals()","spring?()","spring_command()","start()","stop()","test_file_patterns()","test_folders()","throw_on_failed_tests()","zeus?()","zeus_command()","guardfile"],"longSearchIndex":["guard","guard::minitest","guard::minitest::inspector","guard::minitest::notifier","guard::minitest::reporter","guard::minitest::runner","guard::minitest::utils","guard::minitestversion","minitest","minitest","minitest::minitest","minitest::minitest::minitest","minitest::minitest::minitest::unit","guard::minitest::runner#_commander()","guard::minitest::inspector#_join_for_glob()","guard::minitest::runner#_run()","minitest::minitest::minitest::unit#_run_anything()","guard::minitest::runner#_run_possibly_bundled_command()","guard::minitest::inspector#_test_file?()","guard::minitest::inspector#_test_files_for_paths()","guard::minitest::runner#all_after_pass?()","guard::minitest::runner#all_env()","guard::minitest::runner#all_paths?()","guard::minitest::inspector#all_test_files()","guard::minitest::runner#autorun?()","guard::minitest::runner#base_env()","guard::minitest::runner#bundler?()","guard::minitest::inspector#clean()","guard::minitest::inspector#clean_all()","guard::minitest::inspector#clear_memoized_test_files()","guard::minitest::runner#cli_options()","guard::minitest::runner#drb?()","guard::minitest::runner#drb_command()","guard::minitest::runner#generate_env()","guard::minitest::runner#generate_includes()","guard::minitest::notifier::guard_image()","guard::minitest::notifier::guard_message()","guard::minitest::runner#include_folders()","guard::minitest::runner#minitest_command()","guard::minitest::utils::minitest_version()","guard::minitest::utils::minitest_version_gte_5?()","guard::minitest::utils::minitest_version_gte_5_0_4?()","guard::minitest::new()","guard::minitest::inspector::new()","guard::minitest::runner::new()","guard::minitest::notifier::notify()","guard::minitest::runner#parse_deprecated_options()","guard::minitest::runner#relative_paths()","guard::minitest#reload()","guard::minitest::reporter#report()","guard::minitest::runner#ruby_command()","guard::minitest::runner#rubygems?()","guard::minitest::runner#run()","guard::minitest#run_all()","guard::minitest::runner#run_all()","guard::minitest#run_on_additions()","guard::minitest::runner#run_on_additions()","guard::minitest#run_on_modifications()","guard::minitest::runner#run_on_modifications()","guard::minitest#run_on_removals()","guard::minitest::runner#run_on_removals()","guard::minitest::runner#spring?()","guard::minitest::runner#spring_command()","guard::minitest#start()","guard::minitest#stop()","guard::minitest::runner#test_file_patterns()","guard::minitest::runner#test_folders()","guard::minitest#throw_on_failed_tests()","guard::minitest::runner#zeus?()","guard::minitest::runner#zeus_command()",""],"info":[["Guard","","Guard.html","",""],["Guard::Minitest","","Guard/Minitest.html","",""],["Guard::Minitest::Inspector","","Guard/Minitest/Inspector.html","",""],["Guard::Minitest::Notifier","","Guard/Minitest/Notifier.html","",""],["Guard::Minitest::Reporter","","Guard/Minitest/Reporter.html","",""],["Guard::Minitest::Runner","","Guard/Minitest/Runner.html","",""],["Guard::Minitest::Utils","","Guard/Minitest/Utils.html","",""],["Guard::MinitestVersion","","Guard/MinitestVersion.html","",""],["MiniTest","","MiniTest.html","",""],["MiniTest","","MiniTest.html","",""],["MiniTest::MiniTest","","MiniTest/MiniTest.html","",""],["MiniTest::MiniTest::MiniTest","","MiniTest/MiniTest/MiniTest.html","",""],["MiniTest::MiniTest::MiniTest::Unit","","MiniTest/MiniTest/MiniTest/Unit.html","",""],["_commander","Guard::Minitest::Runner","Guard/Minitest/Runner.html#method-i-_commander","(paths)",""],["_join_for_glob","Guard::Minitest::Inspector","Guard/Minitest/Inspector.html#method-i-_join_for_glob","(fragments)",""],["_run","Guard::Minitest::Runner","Guard/Minitest/Runner.html#method-i-_run","(*args)",""],["_run_anything","MiniTest::MiniTest::MiniTest::Unit","MiniTest/MiniTest/MiniTest/Unit.html#method-i-_run_anything","(type)",""],["_run_possibly_bundled_command","Guard::Minitest::Runner","Guard/Minitest/Runner.html#method-i-_run_possibly_bundled_command","(paths, all)",""],["_test_file?","Guard::Minitest::Inspector","Guard/Minitest/Inspector.html#method-i-_test_file-3F","(path)",""],["_test_files_for_paths","Guard::Minitest::Inspector","Guard/Minitest/Inspector.html#method-i-_test_files_for_paths","(paths = test_folders)",""],["all_after_pass?","Guard::Minitest::Runner","Guard/Minitest/Runner.html#method-i-all_after_pass-3F","()",""],["all_env","Guard::Minitest::Runner","Guard/Minitest/Runner.html#method-i-all_env","()",""],["all_paths?","Guard::Minitest::Runner","Guard/Minitest/Runner.html#method-i-all_paths-3F","(paths)",""],["all_test_files","Guard::Minitest::Inspector","Guard/Minitest/Inspector.html#method-i-all_test_files","()",""],["autorun?","Guard::Minitest::Runner","Guard/Minitest/Runner.html#method-i-autorun-3F","()",""],["base_env","Guard::Minitest::Runner","Guard/Minitest/Runner.html#method-i-base_env","()",""],["bundler?","Guard::Minitest::Runner","Guard/Minitest/Runner.html#method-i-bundler-3F","()",""],["clean","Guard::Minitest::Inspector","Guard/Minitest/Inspector.html#method-i-clean","(paths)",""],["clean_all","Guard::Minitest::Inspector","Guard/Minitest/Inspector.html#method-i-clean_all","()",""],["clear_memoized_test_files","Guard::Minitest::Inspector","Guard/Minitest/Inspector.html#method-i-clear_memoized_test_files","()",""],["cli_options","Guard::Minitest::Runner","Guard/Minitest/Runner.html#method-i-cli_options","()",""],["drb?","Guard::Minitest::Runner","Guard/Minitest/Runner.html#method-i-drb-3F","()",""],["drb_command","Guard::Minitest::Runner","Guard/Minitest/Runner.html#method-i-drb_command","(paths)",""],["generate_env","Guard::Minitest::Runner","Guard/Minitest/Runner.html#method-i-generate_env","(all = false)",""],["generate_includes","Guard::Minitest::Runner","Guard/Minitest/Runner.html#method-i-generate_includes","(include_test_folders = true)",""],["guard_image","Guard::Minitest::Notifier","Guard/Minitest/Notifier.html#method-c-guard_image","(failure_count, skip_count)","<p>failed | pending (skip) | success\n"],["guard_message","Guard::Minitest::Notifier","Guard/Minitest/Notifier.html#method-c-guard_message","(test_count, assertion_count, failure_count, error_count, skip_count, duration)",""],["include_folders","Guard::Minitest::Runner","Guard/Minitest/Runner.html#method-i-include_folders","()",""],["minitest_command","Guard::Minitest::Runner","Guard/Minitest/Runner.html#method-i-minitest_command","(paths, all)",""],["minitest_version","Guard::Minitest::Utils","Guard/Minitest/Utils.html#method-c-minitest_version","()",""],["minitest_version_gte_5?","Guard::Minitest::Utils","Guard/Minitest/Utils.html#method-c-minitest_version_gte_5-3F","()",""],["minitest_version_gte_5_0_4?","Guard::Minitest::Utils","Guard/Minitest/Utils.html#method-c-minitest_version_gte_5_0_4-3F","()",""],["new","Guard::Minitest","Guard/Minitest.html#method-c-new","(options = {})",""],["new","Guard::Minitest::Inspector","Guard/Minitest/Inspector.html#method-c-new","(test_folders, test_file_patterns)",""],["new","Guard::Minitest::Runner","Guard/Minitest/Runner.html#method-c-new","(options = {})",""],["notify","Guard::Minitest::Notifier","Guard/Minitest/Notifier.html#method-c-notify","(test_count, assertion_count, failure_count, error_count, skip_count, duration)",""],["parse_deprecated_options","Guard::Minitest::Runner","Guard/Minitest/Runner.html#method-i-parse_deprecated_options","()",""],["relative_paths","Guard::Minitest::Runner","Guard/Minitest/Runner.html#method-i-relative_paths","(paths)",""],["reload","Guard::Minitest","Guard/Minitest.html#method-i-reload","()",""],["report","Guard::Minitest::Reporter","Guard/Minitest/Reporter.html#method-i-report","()",""],["ruby_command","Guard::Minitest::Runner","Guard/Minitest/Runner.html#method-i-ruby_command","(paths)",""],["rubygems?","Guard::Minitest::Runner","Guard/Minitest/Runner.html#method-i-rubygems-3F","()",""],["run","Guard::Minitest::Runner","Guard/Minitest/Runner.html#method-i-run","(paths, options = {})",""],["run_all","Guard::Minitest","Guard/Minitest.html#method-i-run_all","()",""],["run_all","Guard::Minitest::Runner","Guard/Minitest/Runner.html#method-i-run_all","()",""],["run_on_additions","Guard::Minitest","Guard/Minitest.html#method-i-run_on_additions","(paths)",""],["run_on_additions","Guard::Minitest::Runner","Guard/Minitest/Runner.html#method-i-run_on_additions","(_paths)",""],["run_on_modifications","Guard::Minitest","Guard/Minitest.html#method-i-run_on_modifications","(paths = [])",""],["run_on_modifications","Guard::Minitest::Runner","Guard/Minitest/Runner.html#method-i-run_on_modifications","(paths = [])",""],["run_on_removals","Guard::Minitest","Guard/Minitest.html#method-i-run_on_removals","(paths)",""],["run_on_removals","Guard::Minitest::Runner","Guard/Minitest/Runner.html#method-i-run_on_removals","(_paths)",""],["spring?","Guard::Minitest::Runner","Guard/Minitest/Runner.html#method-i-spring-3F","()",""],["spring_command","Guard::Minitest::Runner","Guard/Minitest/Runner.html#method-i-spring_command","(paths)",""],["start","Guard::Minitest","Guard/Minitest.html#method-i-start","()",""],["stop","Guard::Minitest","Guard/Minitest.html#method-i-stop","()",""],["test_file_patterns","Guard::Minitest::Runner","Guard/Minitest/Runner.html#method-i-test_file_patterns","()",""],["test_folders","Guard::Minitest::Runner","Guard/Minitest/Runner.html#method-i-test_folders","()",""],["throw_on_failed_tests","Guard::Minitest","Guard/Minitest.html#method-i-throw_on_failed_tests","()",""],["zeus?","Guard::Minitest::Runner","Guard/Minitest/Runner.html#method-i-zeus-3F","()",""],["zeus_command","Guard::Minitest::Runner","Guard/Minitest/Runner.html#method-i-zeus_command","(paths)",""],["Guardfile","","lib/guard/minitest/templates/Guardfile.html","","<p>guard :minitest do\n\n<pre># with Minitest::Unit\nwatch(%r{^test/(.*)\\/?test_(.*)\\.rb$})\nwatch(%r{^lib/(.*/)?([^/]+)\\.rb$}) ...</pre>\n"]]}}